// <auto-generated />
using System;
using DAL.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230419203256_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Postgres.Models.Alert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("DAL.Postgres.Models.AlertConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlertId")
                        .HasColumnType("uuid");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Network")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.ToTable("AlertConfigs");
                });

            modelBuilder.Entity("DAL.Postgres.Models.AlertConfigParamValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlertConfigId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlertParamId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlertConfigId");

                    b.HasIndex("AlertParamId");

                    b.ToTable("AlertConfigParamValues");
                });

            modelBuilder.Entity("DAL.Postgres.Models.AlertConfigRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlertConfigId")
                        .HasColumnType("uuid");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlertConfigId");

                    b.ToTable("AlertConfigRoles");
                });

            modelBuilder.Entity("DAL.Postgres.Models.AlertParam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlertId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.ToTable("AlertParams");
                });

            modelBuilder.Entity("DAL.Postgres.Models.AlertConfig", b =>
                {
                    b.HasOne("DAL.Postgres.Models.Alert", "Alert")
                        .WithMany()
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alert");
                });

            modelBuilder.Entity("DAL.Postgres.Models.AlertConfigParamValue", b =>
                {
                    b.HasOne("DAL.Postgres.Models.AlertConfig", "AlertConfig")
                        .WithMany("ParamValues")
                        .HasForeignKey("AlertConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Postgres.Models.AlertParam", "AlertParam")
                        .WithMany("AlertConfigParamValues")
                        .HasForeignKey("AlertParamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlertConfig");

                    b.Navigation("AlertParam");
                });

            modelBuilder.Entity("DAL.Postgres.Models.AlertConfigRole", b =>
                {
                    b.HasOne("DAL.Postgres.Models.AlertConfig", "AlertConfig")
                        .WithMany("Roles")
                        .HasForeignKey("AlertConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlertConfig");
                });

            modelBuilder.Entity("DAL.Postgres.Models.AlertParam", b =>
                {
                    b.HasOne("DAL.Postgres.Models.Alert", "Alert")
                        .WithMany("AlertParams")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alert");
                });

            modelBuilder.Entity("DAL.Postgres.Models.Alert", b =>
                {
                    b.Navigation("AlertParams");
                });

            modelBuilder.Entity("DAL.Postgres.Models.AlertConfig", b =>
                {
                    b.Navigation("ParamValues");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("DAL.Postgres.Models.AlertParam", b =>
                {
                    b.Navigation("AlertConfigParamValues");
                });
#pragma warning restore 612, 618
        }
    }
}
